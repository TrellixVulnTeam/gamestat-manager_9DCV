{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-request.service\";\nexport let AdminService = /*#__PURE__*/(() => {\n  class AdminService {\n    constructor(webRequest) {\n      this.webRequest = webRequest;\n    }\n    /*************************\r\n            * Users *\r\n    *************************/\n\n    /* Create Users */\n\n\n    createUser(name, lastname, username, email, password, _roleId) {\n      return this.webRequest.post('api/users/register', {\n        name,\n        lastname,\n        username,\n        email,\n        password,\n        _roleId\n      });\n    }\n    /* get all Users */\n\n\n    getAllUsers() {\n      return this.webRequest.get('api/users');\n    }\n    /* get all Users */\n\n\n    getUserByID(id) {\n      return this.webRequest.get(`api/users/${id}`);\n    }\n    /* update user */\n\n\n    updateUser(id, name, lastname, username, email, _roleId) {\n      return this.webRequest.patch(`api/users/${id}`, {\n        name,\n        lastname,\n        username,\n        email,\n        _roleId\n      });\n    }\n    /* delete User */\n\n\n    deleteUser(id) {\n      return this.webRequest.delete(`api/users/${id}`);\n    }\n    /*************************\r\n            * Roles *\r\n    *************************/\n\n    /* Get All Roles */\n\n\n    getAllRoles() {\n      return this.webRequest.get('api/roles');\n    }\n    /* Get Roles by ID */\n\n\n    getRoleByID(id) {\n      return this.webRequest.get(`api/roles/${id}`);\n    }\n    /* Create new Role */\n\n\n    createRole(name) {\n      return this.webRequest.post('api/roles', {\n        name\n      });\n    }\n    /* Update Role */\n\n\n    updateRole(id, name) {\n      return this.webRequest.patch(`api/roles/${id}`, {\n        name\n      });\n    }\n    /* Delete Role */\n\n\n    deleteRole(id) {\n      return this.webRequest.delete(`api/roles/${id}`);\n    }\n    /*************************\r\n          * Categories *\r\n    *************************/\n\n    /* Get All Categories */\n\n\n    getAllCategoriesPublic() {\n      return this.webRequest.get('api/categories/all');\n    }\n    /* Get All Categories */\n\n\n    getAllCategories() {\n      return this.webRequest.get('api/categories');\n    }\n    /* Get Category by ID */\n\n\n    getCategoryByID(id) {\n      return this.webRequest.get(`api/categories/${id}`);\n    }\n    /* Create Category */\n\n\n    addCategory(name) {\n      return this.webRequest.post('api/categories', {\n        name\n      });\n    }\n    /* Update Category */\n\n\n    updateCategory(id, name) {\n      return this.webRequest.patch(`api/categories/${id}`, {\n        name\n      });\n    }\n    /* delete */\n\n\n    deleteCategory(id) {\n      return this.webRequest.delete(`api/categories/${id}`);\n    }\n    /*************************\r\n            * Stats *\r\n    *************************/\n\n    /* Get All Stats */\n\n\n    getAllStats() {\n      return this.webRequest.get('api/stats');\n    }\n    /* get Stat by ID */\n\n\n    getStatByID(id) {\n      return this.webRequest.get(`api/stats/${id}`);\n    }\n    /* Create Stat */\n\n\n    addStat(name) {\n      return this.webRequest.post('api/stats', {\n        name\n      });\n    }\n    /* Update Stat */\n\n\n    updateStat(id, name) {\n      return this.webRequest.patch(`api/stats/${id}`, {\n        name\n      });\n    }\n    /* Delete Stat */\n\n\n    deleteStat(id) {\n      return this.webRequest.delete(`api/stats/${id}`);\n    }\n    /*************************\r\n            * Items *\r\n    *************************/\n\n    /* Get All Items */\n\n\n    getAllItems() {\n      return this.webRequest.get('api/items');\n    }\n    /* Get Item By GameID */\n\n\n    getItemByGame(id) {\n      return this.webRequest.get(`api/items/game/${id}`);\n    }\n    /* Get Item by ID */\n\n\n    getItemByID(id) {\n      return this.webRequest.get(`api/items/${id}`);\n    }\n    /* Create Item */\n\n\n    addItem(_categoryID, _gameID, name, image) {\n      var formData = new FormData();\n      formData.append('_categoryID', _categoryID);\n      formData.append('_gameID', _gameID);\n      formData.append('name', name);\n      formData.append('image', image, image.name);\n      return this.webRequest.post('api/items', formData);\n    }\n    /* Update Item */\n\n\n    updateItem(id, _categoryID, _gameID, name, image) {\n      var formData = new FormData();\n\n      if (image) {\n        formData.append('_categoryID', _categoryID);\n        formData.append('_gameID', _gameID);\n        formData.append('name', name);\n        formData.append('image', image, image.name);\n      } else {\n        formData.append('_categoryID', _categoryID);\n        formData.append('_gameID', _gameID);\n        formData.append('name', name);\n      }\n\n      return this.webRequest.patch(`api/items/${id}`, formData);\n    }\n    /* Delete Item */\n\n\n    deleteItem(id) {\n      return this.webRequest.delete(`api/items/${id}`);\n    }\n    /*************************\r\n            * Games *\r\n    *************************/\n\n    /* Get All Games */\n\n\n    getAllGames() {\n      return this.webRequest.get('api/games');\n    }\n    /* Get All Games Public*/\n\n\n    getAllGamesPublic() {\n      return this.webRequest.get('api/games/all');\n    }\n    /* Get Game By ID */\n\n\n    getGameByID(id) {\n      return this.webRequest.get(`api/games/${id}`);\n    }\n    /* Create Game */\n\n\n    addGame(name, description, image) {\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"description\", description);\n      formData.append('image', image, image.name);\n      return this.webRequest.post('api/games', formData);\n    }\n    /* Update Game */\n\n\n    updateGame(id, name, description, image) {\n      var formData = new FormData();\n\n      if (image) {\n        formData.append(\"name\", name);\n        formData.append(\"description\", description);\n        formData.append('image', image, image.name);\n      } else {\n        formData.append(\"name\", name);\n        formData.append(\"description\", description);\n      }\n\n      return this.webRequest.patch(`api/games/${id}`, formData);\n    }\n    /* Delete Game */\n\n\n    deleteGame(id) {\n      return this.webRequest.delete(`api/games/${id}`);\n    }\n    /*************************\r\n            * Boost *\r\n    *************************/\n\n    /* Get All Boosts */\n\n\n    getAllBoost() {\n      return this.webRequest.get('api/boosts');\n    }\n    /* Get Boost By ID */\n\n\n    getBoostByID(id) {\n      return this.webRequest.get(`api/boosts/${id}`);\n    }\n    /* Create Boost */\n\n\n    addBoost(_itemID, _statID, value) {\n      return this.webRequest.post('api/boosts', {\n        _itemID,\n        _statID,\n        value\n      });\n    }\n    /* Update Boost */\n\n\n    updateBoost(id, _itemID, _statID, value) {\n      return this.webRequest.patch(`api/boosts/${id}`, {\n        _itemID,\n        _statID,\n        value\n      });\n    }\n    /* Delete ID */\n\n\n    deleteBoost(id) {\n      return this.webRequest.delete(`api/boosts/${id}`);\n    }\n    /*************************\r\n          * GameStat *\r\n    *************************/\n\n    /* Get All GameStats */\n\n\n    getAllGameStats() {\n      return this.webRequest.get('api/gamestats');\n    }\n    /* Get GameStat By ID */\n\n\n    getGameStatByID(id) {\n      return this.webRequest.get(`api/gamestats/${id}`);\n    }\n    /* Create GameStat */\n\n\n    addGameStat(_gameID, _boostID) {\n      return this.webRequest.post('api/gamestats', {\n        _gameID,\n        _boostID\n      });\n    }\n    /* Update GameStat */\n\n\n    updateGameStat(id, _gameID, _boostID) {\n      return this.webRequest.patch(`api/gamestats/${id}`, {\n        _gameID,\n        _boostID\n      });\n    }\n    /* Delete GameStat */\n\n\n    deleteGameStat(id) {\n      return this.webRequest.delete(`api/gamestats/${id}`);\n    }\n    /* Calculate GameStat */\n\n\n    CalculateBestOption(Game, Item) {\n      return this.webRequest.get(`api/gamestats/calculate/${Game}/${Item}`);\n    }\n\n  }\n\n  AdminService.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)(i0.ɵɵinject(i1.WebRequestService));\n  };\n\n  AdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac,\n    providedIn: 'root'\n  });\n  return AdminService;\n})();","map":null,"metadata":{},"sourceType":"module"}